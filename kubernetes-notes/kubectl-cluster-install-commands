sudo -i 

tee /etc/modules-load.d/containerd.conf <<EOF
overlay
br_netfilter
EOF


modprobe overlay

modprobe br_netfilter


tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF


sysctl --system

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"


apt update

apt install -y containerd.io


mkdir -p /etc/containerd

containerd config default>/etc/containerd/config.toml

sed -e 's/SystemdCgroup = false/SystemdCgroup = true/g' -i /etc/containerd/config.toml


systemctl daemon-reload
systemctl restart containerd
systemctl enable containerd
systemctl status  containerd

apt-get update && apt-get install -y apt-transport-https ca-certificates curl

sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B53DC80D13EDEF05

echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list


KUBE_VERSION=1.26.0
apt-get update


apt-get install -y kubelet=${KUBE_VERSION}-00  kubeadm=${KUBE_VERSION}-00 kubectl=${KUBE_VERSION}-00 kubernetes-cni

apt-mark hold kubelet kubeadm kubectl

systemctl enable kubelet && systemctl start kubelet


kubeadm init --kubernetes-version=${KUBE_VERSION}

kubectl get nodes

cp /etc/kubernetes/admin.conf $HOME/
chown $(id -u):$(id -g) $HOME/admin.conf
export KUBECONFIG=$HOME/admin.conf

echo 'export KUBECONFIG=$HOME/admin.conf' >> $HOME/.bashrc

kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml


kubeadm join 10.1.0.6:6443 --token lvblgi.o339csfvofnln67q \
        --discovery-token-ca-cert-hash sha256:0bb2d59a90a0c969db94675718d70b29b72477ed37e1ae7959c2a9cbe0e48058


kubectl get pods -n kube-system
